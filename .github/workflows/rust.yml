name: Build-Rust

on:
  push:
    branches: [ "main", "errors" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  GOOGLE_CLIENT_JSON_BASE64: ${{ secrets.GOOGLE_CLIENT_JSON_BASE64 }}
  GOOGLE_CLIENT_JSON_OLD_BASE64: ${{ secrets.GOOGLE_CLIENT_JSON_OLD_BASE64 }}

jobs:
  build_rust:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    steps:
    - name: Print success
      run: |
        echo "Building, testing and coverage succeeded!"

  build:
    runs-on: ubuntu-latest
    container: rust:latest

    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
        with:
          key: "build"
      - name: Check formatting
        run: |
          rustup component add rustfmt
          cargo fmt --check
      - name: Check docs
        run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps
      - name: Build
        run: cargo build --verbose
      - name: Check linter warnings
        run: |
          rustup component add clippy
          cargo clippy --all-targets -- -D warnings

  test:
    runs-on: ubuntu-latest
    container: rust:latest

    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
        with:
          key: "test"
      - name: Prepare secret files
        run: |
          echo "$GOOGLE_CLIENT_JSON_BASE64" >> secret1.base64
          base64 --decode secret1.base64 > test-client.json
          mv test-client.json tests
          echo "$GOOGLE_CLIENT_JSON_OLD_BASE64" >> secret2.base64
          base64 --decode secret2.base64 > test-client-old.json
          mv test-client-old.json tests
      - name: Run tests
        run: cargo test --verbose
